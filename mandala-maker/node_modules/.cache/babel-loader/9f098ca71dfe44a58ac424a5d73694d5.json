{"ast":null,"code":"import React, { Component } from \"react\";\nlet ns = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xlink: \"http://www.w3.org/1999/xlink\",\n  html: \"http://www.w3.org/1999/xhtml\"\n};\nexport default class svgGeneric extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createSvgElement = function (element, params) {\n      let e = document.createElementNS(ns.svg, element);\n      if (!params) return e;\n      Object.entries(params).forEach(p => {\n        const [attribute, value] = p;\n        e.setAttributeNS(null, attribute, value);\n      });\n      return e;\n    };\n\n    this.defs = function (params) {\n      return this.createSvgElement(\"defs\", params);\n    };\n\n    this.group = function (params) {\n      return this.createSvgElement(\"g\", params);\n    };\n\n    this.path = function (params) {\n      return this.createSvgElement(\"path\", params);\n    };\n\n    this.use = function (params) {\n      return this.createSvgElement(\"use\", params);\n    };\n\n    this.rect = function (params) {\n      return this.createSvgElement(\"rect\", params);\n    };\n\n    this.circle = function (params) {\n      return this.createSvgElement(\"circle\", params);\n    };\n\n    this.centerElement = function (element) {\n      let bBox = element.getBBox();\n      element.style.transform = `translate(-${bBox.width / 2 + bBox.x}px, -${bBox.height / 2 + bBox.y}px)`;\n    };\n\n    this.addToDefs = function (elem) {\n      console.log(eact.findDOMNode(\"svg\")); // document.getElementsByTagName(\"defs\")[0].appendChild(elem);\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Soda/Documents/HTML5/mandala-maker/src/js/svgGeneric.js"],"names":["React","Component","ns","svg","xlink","html","svgGeneric","createSvgElement","element","params","e","document","createElementNS","Object","entries","forEach","p","attribute","value","setAttributeNS","defs","group","path","use","rect","circle","centerElement","bBox","getBBox","style","transform","width","x","height","y","addToDefs","elem","console","log","eact","findDOMNode"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,IAAIC,EAAE,GAAG;AACPC,EAAAA,GAAG,EAAE,4BADE;AAEPC,EAAAA,KAAK,EAAE,8BAFA;AAGPC,EAAAA,IAAI,EAAE;AAHC,CAAT;AAKA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAEhDM,gBAFgD,GAE7B,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,UAAIC,CAAC,GAAGC,QAAQ,CAACC,eAAT,CAAyBV,EAAE,CAACC,GAA5B,EAAiCK,OAAjC,CAAR;AACA,UAAI,CAACC,MAAL,EAAa,OAAOC,CAAP;AACbG,MAAAA,MAAM,CAACC,OAAP,CAAeL,MAAf,EAAuBM,OAAvB,CAAgCC,CAAD,IAAO;AACpC,cAAM,CAACC,SAAD,EAAYC,KAAZ,IAAqBF,CAA3B;AACAN,QAAAA,CAAC,CAACS,cAAF,CAAiB,IAAjB,EAAuBF,SAAvB,EAAkCC,KAAlC;AACD,OAHD;AAIA,aAAOR,CAAP;AACD,KAV+C;;AAAA,SAahDU,IAbgD,GAazC,UAAUX,MAAV,EAAkB;AACvB,aAAO,KAAKF,gBAAL,CAAsB,MAAtB,EAA8BE,MAA9B,CAAP;AACD,KAf+C;;AAAA,SAiBhDY,KAjBgD,GAiBxC,UAAUZ,MAAV,EAAkB;AACxB,aAAO,KAAKF,gBAAL,CAAsB,GAAtB,EAA2BE,MAA3B,CAAP;AACD,KAnB+C;;AAAA,SAqBhDa,IArBgD,GAqBzC,UAAUb,MAAV,EAAkB;AACvB,aAAO,KAAKF,gBAAL,CAAsB,MAAtB,EAA8BE,MAA9B,CAAP;AACD,KAvB+C;;AAAA,SAyBhDc,GAzBgD,GAyB1C,UAAUd,MAAV,EAAkB;AACtB,aAAO,KAAKF,gBAAL,CAAsB,KAAtB,EAA6BE,MAA7B,CAAP;AACD,KA3B+C;;AAAA,SA6BhDe,IA7BgD,GA6BzC,UAAUf,MAAV,EAAkB;AACvB,aAAO,KAAKF,gBAAL,CAAsB,MAAtB,EAA8BE,MAA9B,CAAP;AACD,KA/B+C;;AAAA,SAiChDgB,MAjCgD,GAiCvC,UAAUhB,MAAV,EAAkB;AACzB,aAAO,KAAKF,gBAAL,CAAsB,QAAtB,EAAgCE,MAAhC,CAAP;AACD,KAnC+C;;AAAA,SAuChDiB,aAvCgD,GAuChC,UAAUlB,OAAV,EAAmB;AACjC,UAAImB,IAAI,GAAGnB,OAAO,CAACoB,OAAR,EAAX;AACApB,MAAAA,OAAO,CAACqB,KAAR,CAAcC,SAAd,GAA2B,cAAaH,IAAI,CAACI,KAAL,GAAa,CAAb,GAAiBJ,IAAI,CAACK,CAAE,QAC9DL,IAAI,CAACM,MAAL,GAAc,CAAd,GAAkBN,IAAI,CAACO,CACxB,KAFD;AAGD,KA5C+C;;AAAA,SAgDhDC,SAhDgD,GAgDpC,UAAUC,IAAV,EAAgB;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,WAAL,CAAiB,KAAjB,CAAZ,EAD8B,CAE1B;AACD,KAnD+C;AAAA;;AAAA","sourcesContent":["import React, { Component } from \"react\";\r\nlet ns = {\r\n  svg: \"http://www.w3.org/2000/svg\",\r\n  xlink: \"http://www.w3.org/1999/xlink\",\r\n  html: \"http://www.w3.org/1999/xhtml\",\r\n};\r\nexport default class svgGeneric extends Component {\r\n  //create svg elements\r\n  createSvgElement = function (element, params) {\r\n    let e = document.createElementNS(ns.svg, element);\r\n    if (!params) return e;\r\n    Object.entries(params).forEach((p) => {\r\n      const [attribute, value] = p;\r\n      e.setAttributeNS(null, attribute, value);\r\n    });\r\n    return e;\r\n  };\r\n\r\n  //shortcuts for common elements\r\n  defs = function (params) {\r\n    return this.createSvgElement(\"defs\", params);\r\n  };\r\n\r\n  group = function (params) {\r\n    return this.createSvgElement(\"g\", params);\r\n  };\r\n\r\n  path = function (params) {\r\n    return this.createSvgElement(\"path\", params);\r\n  };\r\n\r\n  use = function (params) {\r\n    return this.createSvgElement(\"use\", params);\r\n  };\r\n\r\n  rect = function (params) {\r\n    return this.createSvgElement(\"rect\", params);\r\n  };\r\n\r\n  circle = function (params) {\r\n    return this.createSvgElement(\"circle\", params);\r\n  };\r\n\r\n  //centers an element around point 0,0\r\n  //TODO: test this\r\n  centerElement = function (element) {\r\n    let bBox = element.getBBox();\r\n    element.style.transform = `translate(-${bBox.width / 2 + bBox.x}px, -${\r\n      bBox.height / 2 + bBox.y\r\n    }px)`;\r\n  };\r\n\r\n  //creates or uses existing defs to give element a coordiante system\r\n  //FIXME:this may need to change if multiple defs in different svgs with different viewports)\r\n  addToDefs = function (elem) {\r\nconsole.log(eact.findDOMNode(\"svg\"));\r\n    // document.getElementsByTagName(\"defs\")[0].appendChild(elem);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}