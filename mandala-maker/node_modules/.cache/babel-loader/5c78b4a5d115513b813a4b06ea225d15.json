{"ast":null,"code":"import logo from \"./logo.svg\";\nimport { ReactComponent } from \"@svgr/webpack?-svgo,+titleProp,+ref!./logo.svg\";\nimport \"./App.css\";\n\nclass TestMandala extends ReactComponent {\n  render() {\n    let outerMandalaPetal = makeConcentricRings([[omegaDot], [\"circle\"], [omegaDot], [\"circle\"]], [{\n      cuts: 21,\n      radius: 1200\n    }, {\n      radius: 900\n    }, {\n      cuts: 14,\n      radius: 600,\n      scale: 0.7\n    }, {\n      radius: 300\n    }], {\n      id: \"outerMandelaPetal\"\n    }); // svgContainer.appendChild(outerMandalaPetal);\n    // gsap.set(outerMandalaPetal, { x: 7000 });\n\n    let mandala = makeConcentricRings([[outerMandalaPetal], [petalDiamond], [petalHeart], [omegaDot], [rice], [\"circle\"], [omegaDot]], [{\n      radius: 2100,\n      cuts: 6,\n      scale: 0.7,\n      ringOffset: 0\n    }, {\n      radius: 2400,\n      cuts: 6,\n      ringOffset: 30\n    }, {\n      radius: 1400,\n      cuts: 6\n    }, {\n      radius: 1100,\n      cuts: 6,\n      scale: 1.5\n    }, {\n      radius: 900,\n      cuts: 30\n    }, {\n      radius: 750\n    }, {\n      radius: 500,\n      cuts: 8\n    }], {\n      id: \"mandala\"\n    });\n    svgContainer.appendChild(mandala);\n\n    mandala.onclick = () => {\n      gsap.to(\".ring:nth-child(even)\", {\n        duration: 15,\n        transformOrigin: \"center\",\n        ease: \"none\",\n        rotation: 360,\n        repeat: -1\n      });\n      gsap.to(\".ring:nth-child(odd)\", {\n        duration: 15,\n        transformOrigin: \"center\",\n        ease: \"none\",\n        rotation: -360,\n        repeat: -1\n      });\n    };\n  }\n\n}\n\nexport default TestMandala;","map":{"version":3,"sources":["C:/Users/Soda/Documents/HTML5/mandala-maker/src/TestMandela.js"],"names":["TestMandala","ReactComponent","render","outerMandalaPetal","makeConcentricRings","omegaDot","cuts","radius","scale","id","mandala","petalDiamond","petalHeart","rice","ringOffset","svgContainer","appendChild","onclick","gsap","to","duration","transformOrigin","ease","rotation","repeat"],"mappings":";;AACA,OAAO,WAAP;;AAEA,MAAMA,WAAN,SAA0BC,cAA1B,CAAyC;AACvCC,EAAAA,MAAM,GAAG;AACP,QAAIC,iBAAiB,GAAGC,mBAAmB,CACzC,CAAC,CAACC,QAAD,CAAD,EAAa,CAAC,QAAD,CAAb,EAAyB,CAACA,QAAD,CAAzB,EAAqC,CAAC,QAAD,CAArC,CADyC,EAEzC,CACE;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KADF,EAEE;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAFF,EAGE;AAAED,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE,GAApB;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAHF,EAIE;AAAED,MAAAA,MAAM,EAAE;AAAV,KAJF,CAFyC,EAQzC;AAAEE,MAAAA,EAAE,EAAE;AAAN,KARyC,CAA3C,CADO,CAYP;AACA;;AAEA,QAAIC,OAAO,GAAGN,mBAAmB,CAC/B,CACE,CAACD,iBAAD,CADF,EAEE,CAACQ,YAAD,CAFF,EAGE,CAACC,UAAD,CAHF,EAIE,CAACP,QAAD,CAJF,EAKE,CAACQ,IAAD,CALF,EAME,CAAC,QAAD,CANF,EAOE,CAACR,QAAD,CAPF,CAD+B,EAU/B,CACE;AAAEE,MAAAA,MAAM,EAAE,IAAV;AAAgBD,MAAAA,IAAI,EAAE,CAAtB;AAAyBE,MAAAA,KAAK,EAAE,GAAhC;AAAqCM,MAAAA,UAAU,EAAE;AAAjD,KADF,EAEE;AAAEP,MAAAA,MAAM,EAAE,IAAV;AAAgBD,MAAAA,IAAI,EAAE,CAAtB;AAAyBQ,MAAAA,UAAU,EAAE;AAArC,KAFF,EAGE;AAAEP,MAAAA,MAAM,EAAE,IAAV;AAAgBD,MAAAA,IAAI,EAAE;AAAtB,KAHF,EAIE;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBD,MAAAA,IAAI,EAAE,CAAtB;AAAyBE,MAAAA,KAAK,EAAE;AAAhC,KAJF,EAKE;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeD,MAAAA,IAAI,EAAE;AAArB,KALF,EAME;AAAEC,MAAAA,MAAM,EAAE;AAAV,KANF,EAOE;AAAEA,MAAAA,MAAM,EAAE,GAAV;AAAeD,MAAAA,IAAI,EAAE;AAArB,KAPF,CAV+B,EAmB/B;AAAEG,MAAAA,EAAE,EAAE;AAAN,KAnB+B,CAAjC;AAqBAM,IAAAA,YAAY,CAACC,WAAb,CAAyBN,OAAzB;;AACAA,IAAAA,OAAO,CAACO,OAAR,GAAkB,MAAM;AACtBC,MAAAA,IAAI,CAACC,EAAL,CAAQ,uBAAR,EAAiC;AAC/BC,QAAAA,QAAQ,EAAE,EADqB;AAE/BC,QAAAA,eAAe,EAAE,QAFc;AAG/BC,QAAAA,IAAI,EAAE,MAHyB;AAI/BC,QAAAA,QAAQ,EAAE,GAJqB;AAK/BC,QAAAA,MAAM,EAAE,CAAC;AALsB,OAAjC;AAOAN,MAAAA,IAAI,CAACC,EAAL,CAAQ,sBAAR,EAAgC;AAC9BC,QAAAA,QAAQ,EAAE,EADoB;AAE9BC,QAAAA,eAAe,EAAE,QAFa;AAG9BC,QAAAA,IAAI,EAAE,MAHwB;AAI9BC,QAAAA,QAAQ,EAAE,CAAC,GAJmB;AAK9BC,QAAAA,MAAM,EAAE,CAAC;AALqB,OAAhC;AAOD,KAfD;AAgBD;;AAtDsC;;AAyDzC,eAAexB,WAAf","sourcesContent":["import logo, { ReactComponent } from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nclass TestMandala extends ReactComponent {\r\n  render() {\r\n    let outerMandalaPetal = makeConcentricRings(\r\n      [[omegaDot], [\"circle\"], [omegaDot], [\"circle\"]],\r\n      [\r\n        { cuts: 21, radius: 1200 },\r\n        { radius: 900 },\r\n        { cuts: 14, radius: 600, scale: 0.7 },\r\n        { radius: 300 },\r\n      ],\r\n      { id: \"outerMandelaPetal\" }\r\n    );\r\n\r\n    // svgContainer.appendChild(outerMandalaPetal);\r\n    // gsap.set(outerMandalaPetal, { x: 7000 });\r\n\r\n    let mandala = makeConcentricRings(\r\n      [\r\n        [outerMandalaPetal],\r\n        [petalDiamond],\r\n        [petalHeart],\r\n        [omegaDot],\r\n        [rice],\r\n        [\"circle\"],\r\n        [omegaDot],\r\n      ],\r\n      [\r\n        { radius: 2100, cuts: 6, scale: 0.7, ringOffset: 0 },\r\n        { radius: 2400, cuts: 6, ringOffset: 30 },\r\n        { radius: 1400, cuts: 6 },\r\n        { radius: 1100, cuts: 6, scale: 1.5 },\r\n        { radius: 900, cuts: 30 },\r\n        { radius: 750 },\r\n        { radius: 500, cuts: 8 },\r\n      ],\r\n      { id: \"mandala\" }\r\n    );\r\n    svgContainer.appendChild(mandala);\r\n    mandala.onclick = () => {\r\n      gsap.to(\".ring:nth-child(even)\", {\r\n        duration: 15,\r\n        transformOrigin: \"center\",\r\n        ease: \"none\",\r\n        rotation: 360,\r\n        repeat: -1,\r\n      });\r\n      gsap.to(\".ring:nth-child(odd)\", {\r\n        duration: 15,\r\n        transformOrigin: \"center\",\r\n        ease: \"none\",\r\n        rotation: -360,\r\n        repeat: -1,\r\n      });\r\n    };\r\n  }\r\n}\r\n\r\nexport default TestMandala;\r\n"]},"metadata":{},"sourceType":"module"}