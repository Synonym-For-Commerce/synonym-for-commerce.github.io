{"version":3,"sources":["js/svgGeneric.js","js/mandala.js","App.js","reportWebVitals.js","index.js"],"names":["ns","createSvgElement","element","params","e","document","createElementNS","Object","entries","forEach","p","attribute","value","setAttributeNS","group","use","addToDefs","elem","getElementsByTagName","appendChild","pi","Math","PI","makeRing","pathArr","ring","svgGeneric","class","ringClass","len","length","r","radius","avgWidth","avgHeight","pathDataArr","bBox","getBBox","width","height","push","getAttribute","circumference","totalCuts","cuts","floor","i","pathData","partialPath","href","gsapCenterElement","gsapMoveToCircumferenceAtAngle","scale","gsap","set","transformOrigin","rotation","offset","x","y","angleRad","sin","cos","makeConcentricRings","pathArrArr","paramArr","concentricSystem","id","elemArr","index","ringArr","title","mandala1","hideTL","timeline","hideHUD","reversed","play","reverse","to","duration","opacity","App","useRef","mandalaStage","omegaDot","rice","petalDaisy","petalDiamond","petalHeart","outerMandalaPetal","stadiums","egg","palm","currentRing","listItems","path","addPathButton","listItem","find","c","target","innerHTML","getElementById","append","updateMandala","console","log","clearPathArr","ringNumberToClear","updateCuts","updateRadius","updateScale","updateOffset","revArr","slice","mandalaPaths","firstChild","removeChild","TabPanel","props","children","other","role","hidden","aria-labelledby","Box","Typography","tabClasses","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","display","position","tabs","borderRight","divider","tabStyles","listClasses","listStyles","React","useState","setValue","useEffect","tl","paused","ease","repeat","onclick","visibility","className","ref","el","xmlns","viewBox","fill","stroke","strokeWidth","d","stroke-width","Tabs","orientation","variant","onChange","event","newValue","aria-label","map","Tab","label","a11yProps","Slider","defaultValue","valueLabelDisplay","min","max","step","marks","steps","List","component","item","ListItem","button","onClick","ListItemText","primary","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.18996dd0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nlet ns = {\r\n  svg: \"http://www.w3.org/2000/svg\",\r\n  xlink: \"http://www.w3.org/1999/xlink\",\r\n  html: \"http://www.w3.org/1999/xhtml\",\r\n};\r\n\r\n//create svg elements\r\nexport function createSvgElement(element, params) {\r\n  let e = document.createElementNS(ns.svg, element);\r\n  if (!params) return e;\r\n  Object.entries(params).forEach((p) => {\r\n    const [attribute, value] = p;\r\n    e.setAttributeNS(null, attribute, value);\r\n  });\r\n  return e;\r\n}\r\n\r\n//shortcuts for common elements\r\nexport function defs(params) {\r\n  return createSvgElement(\"defs\", params);\r\n}\r\n\r\nexport function group(params) {\r\n  return createSvgElement(\"g\", params);\r\n}\r\n\r\nexport function path(params) {\r\n  return createSvgElement(\"path\", params);\r\n}\r\n\r\nexport function use(params) {\r\n  return createSvgElement(\"use\", params);\r\n}\r\n\r\nexport function rect(params) {\r\n  return createSvgElement(\"rect\", params);\r\n}\r\n\r\nexport function circle(params) {\r\n  return createSvgElement(\"circle\", params);\r\n}\r\n\r\n//centers an element around point 0,0\r\n//TODO: test this\r\nexport function centerElement(element) {\r\n  let bBox = element.getBBox();\r\n  element.style.transform = `translate(-${bBox.width / 2 + bBox.x}px, -${\r\n    bBox.height / 2 + bBox.y\r\n  }px)`;\r\n}\r\n\r\n//creates or uses existing defs to give element a coordiante system\r\n//FIXME:this may need to change if multiple defs in different svgs with different viewports)\r\nexport function addToDefs(elem) {\r\n  if (!document.getElementsByTagName(\"defs\")[0]) {\r\n    document.getElementsByTagName(\"svg\")[0].appendChild(defs());\r\n  }\r\n  document.getElementsByTagName(\"defs\")[0].appendChild(elem);\r\n}\r\n","// import React, { Component } from \"react\";\r\nimport gsap from \"gsap\";\r\nimport * as svgGeneric from \"./svgGeneric\";\r\nconst pi = Math.PI;\r\nlet defaultRadius = 10;\r\n\r\n// class mandala extends Component {\r\n//this file is dependent on GSAP core library and my svgGeneric library\r\n//the purpose of this file is to facilitate the creation of mandala type patterns from svg paths,\r\n//TODO: flatten the paths on each ring so there isnt one on top of the others.. but i dont wanna even think about the frigggin math involved in that nonsense, also involves switching betweeen <use> and <path>, not ideal\r\n//centering doesnt work in other browsers do a stupid fucking platform bullshit goddamit test thing\r\n//theres like, zero, exception handling in this bitch. passing anything other than the expected arrays or params into any of the functions will cause it to crap its pants\r\n\r\n//creates a circle from an array of svg paths, returns <g class=\"ring\">\r\nexport function makeRing(pathArr, params) {\r\n  const ring =\r\n    params && params[\"ringClass\"]\r\n      ? svgGeneric.group({ class: params.ringClass + \" ring\" })\r\n      : svgGeneric.group({ class: \"ring\" });\r\n  const len = pathArr.length;\r\n  if (len < 1) {\r\n    //FIXME: should probably have default value for undefined radius\r\n    return ring.appendChild(\r\n      svgGeneric.circle({ r: params && params[\"radius\"] ? params.radius : defaultRadius, class: \"mandalaCircle\" })\r\n    );\r\n  }\r\n  let avgWidth = 0;\r\n  let avgHeight = 0;\r\n  let pathDataArr = [];\r\n  pathArr.forEach((e) => {\r\n    //TODO: exception handeling for non svgelement input\r\n    let bBox = e.getBBox();\r\n    //any elements passed in that are not in dom will be added to defs, as will any elements in the dom that have height == 0 and width == 0\r\n    if (!bBox.width && !bBox.height) {\r\n      svgGeneric.addToDefs(e);\r\n      bBox = e.getBBox();\r\n    }\r\n    avgWidth += bBox.width;\r\n    avgHeight += bBox.height;\r\n    pathDataArr.push([e.getAttribute(\"id\"), e.getAttribute(\"class\")]);\r\n  });\r\n  avgWidth /= len;\r\n  avgHeight /= len;\r\n  let radius = params && params[\"radius\"] ? params.radius : avgHeight;\r\n  let circumference = radius * 2 * pi;\r\n  let cuts =\r\n    !params || !params[\"cuts\"] || params.cuts < 1\r\n      ? Math.floor(circumference / avgWidth / len)\r\n      : params.cuts;\r\n  let totalCuts = cuts * len;\r\n\r\n  for (let i = 1; i <= totalCuts; i++) {\r\n    let pathData = pathDataArr[i % len];\r\n    let partialPath = svgGeneric.use({\r\n      href: `#${pathData[0]}`,\r\n      class: pathData[1],\r\n    });\r\n\r\n    //center\r\n    gsapCenterElement(partialPath);\r\n    //move to circumference\r\n    var angleRad = (2 * pi * i) / totalCuts;\r\n    let scale = params && params[\"scale\"] ? params.scale : 1;\r\n    gsapMoveToCircumferenceAtAngle(partialPath, angleRad, radius, scale);\r\n    ring.appendChild(partialPath);\r\n  }\r\n  if (params && params[\"offset\"])\r\n    gsap.set(ring, {\r\n      transformOrigin: \"center\",\r\n      rotation: params.offset,\r\n    });\r\n  return ring;\r\n}\r\n\r\n//centers an svg element\r\n//doesnt seem to work in firefox\r\n//uses bbox which requires the path\r\nfunction gsapCenterElement(elem) {\r\n  //requires the element to exist within the dom so bBox is not 0,\r\n  svgGeneric.addToDefs(elem);\r\n  let bBox = elem.getBBox();\r\n  gsap.set(elem, {\r\n    x: `-=${bBox.width / 2 + bBox.x}px`,\r\n    y: `-=${bBox.height / 2 + bBox.y}px`,\r\n  });\r\n}\r\n\r\n//moves an element to a some point in an imaginary circle surrounding the element\r\nfunction gsapMoveToCircumferenceAtAngle(elem, angleRad, radius, scale) {\r\n  gsap.set(elem, {\r\n    transformOrigin: \"center\",\r\n    x: `+=${radius * Math.sin(angleRad)}px`,\r\n    y: `-=${radius * Math.cos(angleRad)}px`,\r\n    rotation: `${angleRad}rad`,\r\n    scale: scale,\r\n  });\r\n}\r\n//creates a series of rings using makeRing function\r\n//first param is an arra of arrays the inner arrays are to be comprised of svg paths\r\n//second param is an array or parameters relating to each ring; radius, cuts, ringClass\r\n//third param is params relating to the overall system of concentric rings; concentricSystem\r\nexport default function makeConcentricRings(pathArrArr, paramArr, params) {\r\n  let concentricSystem =\r\n    params && params[\"concentricSystem\"]\r\n      ? params.concentricSystem\r\n      : svgGeneric.group({ id: params.id });\r\n  pathArrArr.forEach((elemArr, index) => {\r\n    let ring = makeRing(elemArr, paramArr[index % paramArr.length]);\r\n    concentricSystem.appendChild(ring);\r\n  });\r\n  return concentricSystem;\r\n}\r\n","import \"./Css/App.css\";\nimport \"./Css/index.css\";\nimport \"./Css/mandalaPalette.css\";\nimport \"./Css/mandala.css\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport makeConcentricRings from \"./js/mandala.js\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\n\n//contents of ring tabs\nlet ringArr = [\n  {\n    title: \"0\",\n    cuts: 0,\n    radius: null,\n    scale: 1,\n    offset: null,\n    pathArr: [],\n  },\n  {\n    title: \"1\",\n    cuts: 0,\n    radius: null,\n    scale: 1,\n    offset: null,\n    pathArr: [],\n  },\n  {\n    title: \"2\",\n    cuts: 0,\n    radius: null,\n    scale: 1,\n    offset: null,\n    pathArr: [],\n  },\n  {\n    title: \"3\",\n    cuts: 0,\n    radius: null,\n    scale: 1,\n    offset: null,\n    pathArr: [],\n  },\n  {\n    title: \"4\",\n    cuts: 0,\n    radius: null,\n    scale: 1,\n    offset: null,\n    pathArr: [],\n  },\n  {\n    title: \"5\",\n    cuts: 0,\n    radius: null,\n    scale: 1,\n    offset: null,\n    pathArr: [],\n  },\n  {\n    title: \"6\",\n    cuts: 0,\n    radius: null,\n    scale: 1,\n    offset: null,\n    pathArr: [],\n  },\n];\n\n//FIXME: mandala1 needs to exist for onclick to work so i just grabbed a random element, definatly change this to something more logical\nlet mandala1 = document.getElementsByTagName(\"body\")[0];\n\n//redeclared in useEffect for .HUD\nlet hideTL = gsap.timeline();\nhideTL.to(\".HUD\", { duration: 0.3, opacity: 0 });\nhideTL.reversed(true);\n\n// toggle function\nfunction hideHUD() {\n  hideTL.reversed() ? hideTL.play() : hideTL.reverse();\n}\n\nfunction App() {\n  //default path vars\n  let svgContainer = useRef(null);\n  let mandalaStage = useRef(null);\n  let defs = useRef(null);\n\n  let omegaDot = useRef(null);\n  let rice = useRef(null);\n  let petalDaisy = useRef(null);\n  let petalDiamond = useRef(null);\n  let petalHeart = useRef(null);\n  let outerMandalaPetal = null;\n  let stadiums = useRef(null);\n  let egg = useRef(null);\n  let palm = useRef(null);\n\n  let radiusMultiplyer = 100;\n\n  //this shoudl probably be a state or something\n  let currentRing = 0;\n\n  //svgElement and their associated information, populates path list\n  //FIXME: this list is re declared later on and its identical\n  let listItems = [\n    { path: omegaDot, title: \"Omega Dot\" },\n    { path: rice, title: \"Rice\" },\n    { path: petalDaisy, title: \"Daisy Petal\" },\n    { path: petalHeart, title: \"Heart Petal\" },\n    { path: petalDiamond, title: \"Diamond Petal\" },\n    { path: outerMandalaPetal, title: \"Gear Petal\" },\n    { path: egg, title: \"Egg\" },\n    { path: palm, title: \"Palm\" },\n    { path: stadiums, title: \"Stadiums\" },\n  ];\n\n  //all of this is ugly mix of dom manipulation, get rid of it\n  function addPathButton(e) {\n    let listItem = listItems.find((c) => c.title === e.target.innerHTML);\n    try {\n      ringArr[currentRing].pathArr.push(listItem.path);\n      document\n        .getElementById(`tablePathArrCell${currentRing}`)\n        .append(listItem.title + \" \");\n      updateMandala();\n    } catch {\n      console.log(\"zoot skipped a grove agian\");\n    }\n  }\n\n  function clearPathArr(e) {\n    try {\n      let ringNumberToClear = e.target.innerHTML;\n      ringArr[ringNumberToClear].pathArr = [];\n      document.getElementById(\n        `tablePathArrCell${ringNumberToClear}`\n      ).innerHTML = \"\";\n      updateMandala();\n    } catch {\n      console.log(\"failed to remove paths\");\n    }\n  }\n\n  // TODO: the following 4 functions are really similar, dry it up\n  function updateCuts(e, value) {\n    ringArr[currentRing].cuts = value;\n    updateMandala();\n  }\n  function updateRadius(e, value) {\n    ringArr[currentRing].radius = value * radiusMultiplyer;\n    updateMandala();\n  }\n  function updateScale(e, value) {\n    ringArr[currentRing].scale = value;\n    updateMandala();\n  }\n  function updateOffset(e, value) {\n    ringArr[currentRing].offset = value;\n    updateMandala();\n  }\n\n  function updateMandala() {\n    //TODO: either change the way the makeConcentricRings function takes params or change the ringArr to correspond to the exisiting function params\n    let revArr = ringArr.slice().reverse();\n    let mandalaPaths = [];\n    revArr.forEach((r, index) => {\n      mandalaPaths[index] = r.pathArr;\n    });\n    try {\n      mandala1 = makeConcentricRings(mandalaPaths, revArr, {\n        id: \"mandala1\",\n      });\n    } catch {\n      console.log(\"updateMandala failed\");\n    }\n    while (mandalaStage.firstChild) {\n      mandalaStage.removeChild(mandalaStage.firstChild);\n    }\n    mandalaStage.appendChild(mandala1);\n  }\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    currentRing = value;\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `vertical-tab-${index}`,\n      \"aria-controls\": `vertical-tabpanel-${index}`,\n    };\n  }\n\n  //style stuff\n  const tabStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      display: \"flex\",\n      position: \"fixed\",\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`,\n    },\n  }));\n  const tabClasses = tabStyles();\n  const listStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  const listClasses = listStyles();\n\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  //create default mandala\n  useEffect(() => {\n    outerMandalaPetal = makeConcentricRings(\n      [[omegaDot], [], [omegaDot], []],\n      [\n        { cuts: 21, radius: 1200 },\n        { radius: 900 },\n        { cuts: 14, radius: 600, scale: 0.7 },\n        { radius: 300 },\n      ],\n      { id: \"outerMandelaPetal\" }\n    );\n\n    // this list is redeclared now that the paths arent null\n    listItems = [\n      { path: omegaDot, title: \"Omega Dot\" },\n      { path: rice, title: \"Rice\" },\n      { path: petalDaisy, title: \"Daisy Petal\" },\n      { path: petalHeart, title: \"Heart Petal\" },\n      { path: petalDiamond, title: \"Diamond Petal\" },\n      { path: outerMandalaPetal, title: \"Gear Petal\" },\n      { path: egg, title: \"Egg\" },\n      { path: palm, title: \"Palm\" },\n      { path: stadiums, title: \"Stadiums\" },\n    ];\n    let tl = gsap.timeline({ paused: true });\n    tl.to(\n      \".ring:nth-child(even)\",\n      {\n        duration: 15,\n        transformOrigin: \"center\",\n        ease: \"none\",\n        rotation: 360,\n        repeat: -1,\n      },\n      \"ringSpin\"\n    );\n    tl.to(\n      \".ring:nth-child(odd)\",\n      {\n        duration: 15,\n        transformOrigin: \"center\",\n        ease: \"none\",\n        rotation: -360,\n        repeat: -1,\n      },\n      \"ringSpin\"\n    );\n\n    mandala1.onclick = () => {\n      tl.paused(!tl.paused());\n    };\n\n    hideTL = gsap.timeline();\n    hideTL.to(\".HUD\", { duration: 0.3, opacity: 0 });\n    hideTL.set(\".HUD\", { visibility: \"hidden\" });\n    hideTL.reversed(true);\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      <div id=\"canvas\">\n        <svg\n          id=\"svgContainer\"\n          ref={(el) => {\n            svgContainer = el;\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"-15360, -8640, 30720, 17280\"\n        >\n          <defs\n            ref={(el) => {\n              defs = el;\n            }}\n          >\n            <path\n              id=\"omegaDot\"\n              className=\"omegaDot primary\"\n              ref={(el) => {\n                omegaDot = el;\n              }}\n              fill=\"none\"\n              stroke=\"black\"\n              strokeWidth=\"1\"\n              d=\"M 181.33,43.33\n                            C 155.76,43.33 131.00,47.66 131.00,47.66\n                            94.30,55.61 62.78,75.93 43.87,109.00\n                            34.22,125.88 28.03,146.49 28.00,166.00\n                            27.91,221.89 61.98,267.48 115.00,285.00\n                            122.83,287.59 48.65,284.05 15.50,299.50\n                            1.24,306.15 12.19,341.15 17.00,341.00\n                            26.53,340.70 107.35,311.89 180.01,313.11\n                            252.67,314.33 333.47,340.70 343.00,341.00\n                            347.81,341.15 358.76,306.15 344.50,299.50\n                            311.35,284.05 237.17,287.59 245.00,285.00\n                            298.02,267.48 332.09,221.89 332.00,166.00\n                            331.97,146.49 325.78,125.88 316.13,109.00\n                            297.22,75.93 265.70,55.61 229.00,47.66\n                            229.00,47.66 204.66,43.33 181.33,43.33 Z\"\n            />\n            <path\n              id=\"rice\"\n              className=\"rice primary\"\n              ref={(el) => {\n                rice = el;\n              }}\n              fill=\"none\"\n              stroke=\"black\"\n              strokeWidth=\"1\"\n              d=\"M 160.00,46.47\n                                C 172.36,44.77 180.66,51.37 187.57,61.00\n                                    198.15,75.72 203.78,93.60 208.13,111.00\n                                    212.70,129.28 215.63,148.21 217.00,167.00\n                                    217.00,167.00 217.00,175.00 217.00,175.00\n                                    217.00,175.00 218.00,187.00 218.00,187.00\n                                    218.06,227.02 216.45,255.85 206.37,295.00\n                                    202.73,309.16 196.10,326.13 187.57,338.00\n                                    182.79,344.66 176.36,350.94 168.00,352.53\n                                    156.75,354.68 147.49,347.57 141.16,339.00\n                                    129.63,323.40 124.01,304.56 119.37,286.00\n                                    114.23,265.43 112.35,245.03 110.91,224.00\n                                    110.91,224.00 110.00,212.00 110.00,212.00\n                                    109.94,172.16 111.50,144.00 121.37,105.00\n                                    126.34,85.38 138.23,51.79 160.00,46.47 Z\"\n            />\n            <path\n              id=\"petalDaisy\"\n              className=\"petalDaisy primary\"\n              ref={(el) => {\n                petalDaisy = el;\n              }}\n              fill=\"none\"\n              stroke=\"black\"\n              stroke-width=\"1\"\n              d=\"M 1993.75,3350.00\n              C 1982.90,2818.11 2106.50,2134.87 2196.88,2131.25\n                2290.06,2127.52 2427.66,2797.98 2412.50,3340.62\n                2402.24,3707.85 2275.07,4016.23 2196.88,4018.75\n                2115.19,4021.39 2001.66,3737.66 1993.75,3350.00 Z\n                M 2196.88,2331.25 V3500\"\n            />\n            <g\n              id=\"petalHeart\"\n              className=\"petalHeart\"\n              ref={(el) => {\n                petalHeart = el;\n              }}\n              className=\"petal\"\n            >\n              <path\n                id=\"petalHeartMain\"\n                className=\"petalHeartMain primary\"\n                fill=\"none\"\n                stroke=\"black\"\n                strokeWidth=\"1\"\n                d=\"M 184.13,-249.18\n                            C 164.72,-249.18 144.61,-256.86 144.61,-256.86\n                                144.61,-256.86 -218.69,-712.46 -572.56,-374.89\n                                -926.42,-37.32 -548.96,415.92 -408.60,452.51\n                                -268.23,489.10 78.56,358.08 78.56,358.08\n                                78.56,358.08 133.49,317.36 187.67,317.36\n                                234.38,317.36 281.44,358.08 281.44,358.08\n                                281.44,358.08 628.23,489.10 768.60,452.51\n                                908.96,415.92 1286.42,-37.32 932.56,-374.89\n                                578.69,-712.46 215.39,-256.86 215.39,-256.86\n                                215.39,-256.86 199.67,-249.18 184.13,-249.18 Z\"\n              />\n              <path\n                id=\"petalHeartInner\"\n                className=\"petalHeartInner inner\"\n                fill=\"none\"\n                stroke=\"black\"\n                strokeWidth=\"1\"\n                d=\"M 180.00,285.33\n                            C 166.44,285.33 154.00,292.00 154.00,292.00\n                            154.00,292.00 -349.00,438.00 -422.00,402.00\n                            -495.00,366.00 -842.00,-92.00 -450.00,-384.00\n                            -760.00,-68.00 -411.00,323.00 -390.00,342.00\n                            -376.47,354.24 -348.98,379.39 -322.00,386.00\n                            -307.11,389.65 -283.69,380.42 -283.33,377.33\n                            -274.72,302.81 -344.00,-48.00 -344.00,-48.00\n                            -344.00,-48.00 -326.43,9.04 -306.00,119.33\n                            -289.01,211.02 -269.24,358.21 -263.33,368.00\n                            -253.79,383.80 -232.37,374.11 -222.00,373.00\n                            -211.37,371.86 -182.96,372.35 -178.67,356.00\n                            -171.37,328.21 -195.01,227.33 -206.00,132.00\n                            -216.41,41.71 -214.00,-44.00 -214.00,-44.00\n                            -214.00,-44.00 -200.01,225.14 -166.00,336.00\n                            -154.30,374.14 -67.36,346.05 -62.00,330.00\n                            -47.10,285.36 -69.19,189.67 -80.00,109.00\n                            -89.89,35.16 -88.00,-26.00 -88.00,-26.00\n                            -88.00,-26.00 -67.63,238.08 -29.00,321.00\n                            -19.91,340.51 77.09,317.39 82.00,289.33\n                            88.30,253.35 76.77,175.63 66.67,124.67\n                            50.56,43.42 30.00,-8.67 30.00,-8.67\n                            30.00,-8.67 49.33,38.00 66.67,102.67\n                            84.00,167.33 84.25,270.46 94.67,290.00\n                            104.18,307.85 157.03,280.52 163.33,266.00\n                            177.77,232.76 177.87,174.84 177.33,119.33\n                            176.65,48.09 180.67,-17.33 180.67,-17.33\n                            180.67,-17.33 183.92,48.10 182.67,118.00\n                            181.65,174.52 173.93,233.40 188.67,267.33\n                            194.97,281.85 256.82,307.85 266.33,290.00\n                            276.75,270.46 277.00,167.33 294.33,102.67\n                            311.67,38.00 331.00,-8.67 331.00,-8.67\n                            331.00,-8.67 310.44,43.42 294.33,124.67\n                            284.23,175.63 272.70,253.35 279.00,289.33\n                            283.91,317.39 380.91,340.51 390.00,321.00\n                            428.63,238.08 449.00,-26.00 449.00,-26.00\n                            449.00,-26.00 450.89,35.16 441.00,109.00\n                            430.19,189.67 408.10,285.36 423.00,330.00\n                            428.36,346.05 515.30,374.14 527.00,336.00\n                            561.01,225.14 575.00,-44.00 575.00,-44.00\n                            575.00,-44.00 577.41,41.71 567.00,132.00\n                            556.01,227.33 532.37,328.21 539.67,356.00\n                            543.96,372.35 572.37,371.86 583.00,373.00\n                            593.37,374.11 614.79,383.80 624.33,368.00\n                            630.24,358.21 650.01,211.02 667.00,119.33\n                            687.43,9.04 705.00,-48.00 705.00,-48.00\n                            705.00,-48.00 635.72,302.81 644.33,377.33\n                            644.69,380.42 668.11,389.65 683.00,386.00\n                            709.98,379.39 737.47,354.24 751.00,342.00\n                            772.00,323.00 1121.00,-68.00 811.00,-384.00\n                            1203.00,-92.00 856.00,366.00 783.00,402.00\n                            710.00,438.00 207.00,292.00 207.00,292.00\n                            207.00,292.00 192.92,285.33 180.00,285.33 Z\"\n              />\n            </g>\n            <g\n              id=\"petalDiamond\"\n              ref={(el) => {\n                petalDiamond = el;\n              }}\n              className=\"petalDiamond petal\"\n            >\n              <path\n                id=\"petalDiamondMain\"\n                className=\"petalDiamondmain primary\"\n                d=\"M 185.00,429.00\n                            C 139.38,429.00 92.00,453.00 92.00,453.00\n                                92.00,453.00 -124.11,174.51 -118.00,-195.00\n                                -116.87,-263.54 -24.55,-365.09 29.00,-495.00\n                                89.95,-642.85 113.00,-816.00 113.00,-816.00\n                                113.00,-816.00 152.02,-969.00 188.00,-969.00\n                                218.57,-969.00 247.00,-816.00 247.00,-816.00\n                                247.00,-816.00 270.05,-642.85 331.00,-495.00\n                                384.55,-365.09 476.87,-263.54 478.00,-195.00\n                                484.11,174.51 268.00,453.00 268.00,453.00\n                                268.00,453.00 227.25,429.00 185.00,429.00 Z\"\n              />\n              <path\n                id=\"petalDiamondInner\"\n                className=\"petalDiamondInner inner\"\n                fill=\"none\"\n                stroke=\"black\"\n                strokeWidth=\"1\"\n                d=\"M 170.00,390.00\n                            C 164.67,369.33 158.00,-201.00 158.00,-201.00\n                            158.00,-201.00 47.67,-243.89 50.00,-342.00\n                            51.46,-403.74 103.32,-411.16 128.00,-477.00\n                            161.42,-566.17 170.00,-706.03 170.00,-705.00\n                            170.00,-702.00 182.00,-832.00 182.00,-832.00\n                            182.00,-832.00 190.00,-705.00 190.00,-708.00\n                            190.00,-709.03 198.58,-569.17 232.00,-480.00\n                            256.68,-414.16 308.54,-406.74 310.00,-345.00\n                            312.33,-246.89 202.00,-204.00 202.00,-204.00\n                            202.00,-204.00 190.00,378.33 190.00,387.00\n                            190.00,395.67 175.33,410.67 170.00,390.00 Z\"\n              />\n              <path\n                id=\"petalDiamondDots\"\n                className=\"petalDiamondDots dots\"\n                fill=\"none\"\n                stroke=\"black\"\n                strokeWidth=\"1\"\n                d=\"M 173.00,-1661.78\n                            C 173.00,-1661.78 182.00,-1661.78 182.00,-1661.78\n                            188.34,-1661.92 194.03,-1660.74 200.00,-1658.66\n                            239.49,-1644.87 249.62,-1596.06 223.54,-1565.01\n                            218.80,-1559.38 210.76,-1553.83 204.00,-1550.87\n                            195.71,-1547.25 188.00,-1545.90 179.00,-1546.00\n                            128.23,-1546.58 104.90,-1609.20 139.17,-1644.91\n                            148.28,-1654.40 160.24,-1659.47 173.00,-1661.78 Z\n                            M 171.00,-1502.79\n                            C 171.00,-1502.79 183.00,-1502.79 183.00,-1502.79\n                            194.22,-1502.98 207.83,-1499.99 218.00,-1495.22\n                            231.44,-1488.92 242.02,-1481.61 251.54,-1470.00\n                            278.78,-1436.77 278.78,-1387.23 251.54,-1354.00\n                            242.37,-1342.82 232.81,-1336.05 220.00,-1329.76\n                            206.10,-1322.92 192.32,-1320.82 177.00,-1321.00\n                            164.88,-1321.15 150.78,-1325.36 140.00,-1330.75\n                            97.77,-1351.87 78.74,-1402.27 96.45,-1446.00\n                            110.04,-1479.56 136.26,-1496.89 171.00,-1502.79 Z\n                            M 169.00,-1275.79\n                            C 169.00,-1275.79 183.00,-1275.79 183.00,-1275.79\n                            196.47,-1275.98 211.52,-1272.59 224.00,-1267.60\n                            236.90,-1262.44 250.02,-1254.72 260.00,-1244.99\n                            275.17,-1230.19 285.68,-1215.31 292.26,-1195.00\n                            310.22,-1139.55 285.50,-1078.52 233.00,-1052.27\n                            214.27,-1042.90 195.74,-1039.76 175.00,-1040.00\n                            164.06,-1040.13 148.18,-1043.57 138.00,-1047.60\n                            125.82,-1052.42 114.01,-1058.73 104.00,-1067.30\n                            62.55,-1102.77 50.55,-1159.68 73.31,-1209.00\n                            86.49,-1237.56 113.16,-1260.59 143.00,-1270.26\n                            152.36,-1273.29 159.45,-1274.19 169.00,-1275.79 Z\"\n              />\n            </g>\n            <path\n              id=\"petalGear\"\n              className=\"petalGear primary\"\n              fill=\"none\"\n              stroke=\"black\"\n              strokeWidth=\"1\"\n              d=\"M -564.42,49.44\n                            C -578.27,24.97 -590.37,-0.85 -600.39,-28.11\n                            -613.62,-64.10 -759.00,183.00 -840.00,-63.00\n                            -921.00,-309.00 -633.79,-202.57 -633.00,-234.00\n                            -631.72,-285.24 -624.49,-332.81 -612.33,-376.96\n                            -600.97,-418.18 -855.00,-372.00 -750.00,-594.00\n                            -645.00,-816.00 -532.13,-539.23 -513.00,-564.00\n                            -486.31,-598.56 -457.71,-637.16 -425.29,-665.58\n                            -396.59,-690.74 -366.09,-713.60 -334.58,-734.37\n                            -318.65,-744.86 -558.00,-816.00 -372.00,-921.00\n                            -186.00,-1026.00 -235.62,-792.06 -210.18,-804.24\n                            -174.84,-821.16 -139.50,-835.94 -105.14,-848.82\n                            -81.11,-857.83 -49.67,-871.77 -20.17,-884.03\n                            1.96,-893.23 -210.00,-999.00 -9.00,-1059.00\n                            192.00,-1119.00 85.21,-917.90 104.54,-921.57\n                            176.17,-935.16 276.83,-935.16 348.46,-921.57\n                            367.79,-917.90 261.00,-1119.00 462.00,-1059.00\n                            663.00,-999.00 451.04,-893.23 473.17,-884.03\n                            502.67,-871.77 534.11,-857.83 558.14,-848.82\n                            592.50,-835.94 627.84,-821.16 663.18,-804.24\n                            688.62,-792.06 639.00,-1026.00 825.00,-921.00\n                            1011.00,-816.00 771.65,-744.86 787.58,-734.37\n                            819.09,-713.60 849.59,-690.74 878.29,-665.58\n                            910.71,-637.16 939.31,-598.56 966.00,-564.00\n                            985.13,-539.23 1098.00,-816.00 1203.00,-594.00\n                            1308.00,-372.00 1053.97,-418.18 1065.33,-376.96\n                            1077.49,-332.81 1084.72,-285.24 1086.00,-234.00\n                            1086.79,-202.57 1374.00,-309.00 1293.00,-63.00\n                            1212.00,183.00 1066.62,-64.10 1053.39,-28.11\n                            1043.37,-0.85 1031.27,24.97 1017.42,49.44\n                            818.22,401.10 316.00,464.00 216.00,466.00\n                            116.00,468.00 -365.22,401.10 -564.42,49.44 Z\"\n            />\n            <g\n              id=\"palm\"\n              className=\"palm\"\n              ref={(el) => {\n                palm = el;\n              }}\n            >\n              <path\n                id=\"leafPalm\"\n                className=\"leafPalm primary thick\"\n                fill=\"none\"\n                stroke=\"black\"\n                stroke-width=\"1\"\n                d=\"M 3228.12,1562.50\n           C 3240.62,2365.62 2181.25,2368.75 2181.25,2368.75\n             2181.25,2368.75 1125.00,2306.25 1137.50,1543.75\n             1150.00,781.25 2140.62,834.38 2187.50,262.50\n             2203.12,828.12 3215.62,759.38 3228.12,1562.50 Z\"\n              />\n              <path\n                id=\"leafPalmInner\"\n                className=\"leafPalmInner inner\"\n                fill=\"none\"\n                stroke=\"black\"\n                stroke-width=\"1\"\n                d=\"M 2200.00,646.88\n           C 2208.53,646.88 2218.75,650.00 2218.75,650.00\n             2303.12,643.75 2240.62,1618.75 2356.25,1696.88\n             2390.16,1719.79 2439.60,1520.96 2487.50,1459.38\n             2602.92,1310.97 2729.75,1180.45 2756.25,1231.25\n             2775.81,1268.75 2649.26,1362.34 2556.25,1493.75\n             2470.99,1614.21 2418.22,1772.25 2440.62,1825.00\n             2468.15,1889.81 2639.06,1760.57 2775.00,1687.50\n             2885.72,1627.98 2968.75,1618.89 2968.75,1675.00\n             2968.75,1709.55 2870.09,1723.70 2787.50,1768.75\n             2571.32,1886.66 2409.38,2034.38 2221.88,2043.75\n             2221.88,2043.75 2178.12,2043.75 2178.12,2043.75\n             1990.62,2034.38 1828.68,1886.66 1612.50,1768.75\n             1529.91,1723.70 1431.25,1709.55 1431.25,1675.00\n             1431.25,1618.89 1514.28,1627.98 1625.00,1687.50\n             1760.94,1760.57 1931.85,1889.81 1959.38,1825.00\n             1981.78,1772.25 1929.01,1614.21 1843.75,1493.75\n             1750.74,1362.34 1624.19,1268.75 1643.75,1231.25\n             1670.25,1180.45 1797.08,1310.97 1912.50,1459.38\n             1960.40,1520.96 2009.84,1719.79 2043.75,1696.88\n             2159.38,1618.75 2096.88,643.75 2181.25,650.00\n             2181.25,650.00 2189.91,646.88 2200.00,646.88 Z\"\n              />\n            </g>\n            <g\n              id=\"egg\"\n              className=\"egg\"\n              ref={(el) => {\n                egg = el;\n              }}\n            >\n              <path\n                id=\"eggOuter\"\n                className=\"eggOuter primary thick\"\n                fill=\"none\"\n                stroke=\"black\"\n                stroke-width=\"1\"\n                d=\"M 1184.38,2868.75\n           C 1137.50,4381.25 3459.38,4487.50 3221.88,2793.75\n             2984.38,1100.00 1231.25,1356.25 1184.38,2868.75 Z\"\n              />\n              <path\n                id=\"eggMiddle\"\n                className=\"eggMiddle secondary\"\n                fill=\"none\"\n                stroke=\"black\"\n                stroke-width=\"1\"\n                d=\"M 1312.50,2846.88\n           C 1246.88,4162.50 3215.62,4162.50 3081.25,2800.00\n             2946.88,1437.50 1378.12,1531.25 1312.50,2846.88 Z\"\n              />\n              <path\n                id=\"eggInner\"\n                className=\"eggInner primary\"\n                fill=\"none\"\n                stroke=\"black\"\n                stroke-width=\"1\"\n                d=\"M 1431.25,2834.38\n           C 1409.38,4018.75 2993.75,3812.50 2956.25,2787.50\n             2918.75,1762.50 1453.12,1650.00 1431.25,2834.38 Z\"\n              />\n            </g>\n            <g\n              id=\"stadiums\"\n              className=\"stadiums\"\n              ref={(el) => {\n                stadiums = el;\n              }}\n            >\n              <path\n                class=\"stadiumsOuter primary thick\"\n                stroke-width=\"8\"\n                stroke=\"black\"\n                fill=\"lightblue\"\n                d=\"m-250, -1100 a250,250 0 1 1 500,0 c400,0 600,50 600,1100 c 0,1050 -200,1100 -600,1100a250,250 0 0 1 -500, 0c -400,0 -600,-50 -600,-1100 c 0,-1050 200,-1100 600,-1100\"\n              />\n              <path\n                class=\"stadium secondary\"\n                stroke-width=\"1\"\n                stroke=\"black\"\n                fill=\"grey\"\n                d=\"m-650,-600 a150,150, 0 1,1 300,0 v1200 a150,150, 0 0 1 -300,0z\"\n              />\n              <path\n                class=\"stadium secondary\"\n                stroke-width=\"1\"\n                stroke=\"black\"\n                fill=\"grey\"\n                d=\"m350,-600 a150,150, 0 1,1 300,0 v1200 a150,150, 0 0 1 -300,0z\"\n              />\n              <path\n                class=\"stadium secondary\"\n                stroke-width=\"1\"\n                stroke=\"black\"\n                fill=\"grey\"\n                d=\"m100,-750 a150,150, 0 1,1 300,0 v1500 a150,150, 0 0 1 -300,0z\"\n              />\n              <path\n                class=\"stadium secondary\"\n                stroke-width=\"1\"\n                stroke=\"black\"\n                fill=\"grey\"\n                d=\"m-400,-750 a150,150, 0 1,1 300,0 v1500 a150,150, 0 0 1 -300,0z\"\n              />\n              <path\n                class=\"stadium secondary\"\n                stroke-width=\"1\"\n                stroke=\"black\"\n                fill=\"grey\"\n                d=\"m-150,-900 a150,150, 0 1,1 300,0 v1800 a150,150, 0 0 1 -300,0z\"\n              />\n            </g>\n          </defs>\n          <g\n            id=\"mandalaStage\"\n            ref={(el) => {\n              mandalaStage = el;\n            }}\n            className=\"stage\"\n          ></g>\n        </svg>\n      </div>\n      <div className=\"HUD fixed\">\n        {/* FIXME: this parent div only exists becasue you didnt want to alter the child divs existing class variable  */}\n        <div id=\"pathManipulationMenu\" className={tabClasses.root}>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Ring Tabs\"\n            className={tabClasses.tabs}\n          >\n            {ringArr.map((ring, index) => (\n              <Tab value={index} label={ring.title} {...a11yProps(index)} />\n            ))}\n          </Tabs>\n          {ringArr.map((ring, index) => (\n            <TabPanel value={value} index={index} className=\"tabPanel\">\n              <label id=\"discrete-slider-cuts\">Cuts</label>\n              <Slider\n                className=\"sliderCuts\"\n                onChange={updateCuts}\n                defaultValue={0}\n                // getAriaValueText=\"create function to get aria text\"\n                aria-labelledby=\"discrete-slider-cuts\"\n                valueLabelDisplay=\"auto\"\n                min={0}\n                max={100}\n              />\n              <label id=\"discrete-slider-radius\">Radius</label>\n              <Slider\n                className=\"sliderRadius\"\n                onChange={updateRadius}\n                defaultValue={10}\n                // getAriaValueText=\"create function to get aria text\"\n                aria-labelledby=\"discrete-slider-radius\"\n                valueLabelDisplay=\"auto\"\n                min={0}\n                max={100}\n              />\n              <label id=\"discrete-slider-scale\">Scale</label>\n              <Slider\n                className=\"sliderScale\"\n                onChange={updateScale}\n                defaultValue={1}\n                // getAriaValueText=\"create function to get aria text\"\n                aria-labelledby=\"discrete-slider-scale\"\n                valueLabelDisplay=\"auto\"\n                step={0.1}\n                marks\n                min={0.1}\n                max={2}\n              />\n              <label id=\"discrete-slider-offset\">Offset</label>\n              <Slider\n                onChange={updateOffset}\n                className=\"sliderOffset\"\n                defaultValue={0}\n                // getAriaValueText=\"create function to get aria text\"\n                aria-labelledby=\"discrete-slider-offset\"\n                valueLabelDisplay=\"auto\"\n                steps={1}\n                marks\n                min={-180}\n                max={180}\n              />\n            </TabPanel>\n          ))}\n        </div>\n        {/* end of path sliders */}\n      </div>\n      <div id=\"pathGallery\" className=\"HUD fixed\">\n        <List\n          component=\"nav\"\n          aria-label=\"main mailbox folders\"\n          className={listClasses.root}\n        >\n          {listItems.map((item) => (\n            <ListItem button className=\"pathListItem\" onClick={addPathButton}>\n              <ListItemText primary={item.title} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n      <div id=\"mandalaTable\" className=\"HUD fixed\">\n        <TableContainer component={Paper} id=\"square\">\n          <Table className=\"table\" aria-label=\"mandala table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Clear Ring</TableCell>\n                <TableCell>Paths</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {ringArr.map((ring) => (\n                <TableRow key={ring.title}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Button onClick={clearPathArr}>{ring.title}</Button>\n                  </TableCell>\n                  <TableCell id={`tablePathArrCell${ring.title}`}></TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <Button id=\"buttonHideHUD\" className=\"fixed\" onClick={hideHUD}>\n        Hide Menus\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Css/index.css';\nimport './Css/mandala.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}